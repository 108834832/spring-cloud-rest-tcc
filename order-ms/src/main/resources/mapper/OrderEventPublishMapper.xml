<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.github.prontera.persistence.OrderEventPublishMapper">
    <resultMap id="BaseResultMap" type="com.github.prontera.domain.OrderEventPublish">
        <id column="torder_event_publish_id" jdbcType="BIGINT" property="id"/>
        <result column="torder_event_publish_create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="torder_event_publish_update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="torder_event_publish_delete_time" jdbcType="TIMESTAMP" property="deleteTime"/>
        <result column="torder_event_publish_publish_event_status" jdbcType="TINYINT" property="publishEventStatus"
                typeHandler="com.github.prontera.model.type.handler.EventPublishStatusHandler"/>
        <result column="torder_event_publish_order_id" jdbcType="BIGINT" property="orderId"/>
        <result column="torder_event_publish_event_publish_id" jdbcType="BIGINT" property="eventPublishId"/>
    </resultMap>
    <sql id="Base_Column_List">
        torder_event_publish.id as torder_event_publish_id, torder_event_publish.create_time as torder_event_publish_create_time,
        torder_event_publish.update_time as torder_event_publish_update_time, torder_event_publish.delete_time as torder_event_publish_delete_time,
        torder_event_publish.publish_event_status as torder_event_publish_publish_event_status,
        torder_event_publish.order_id as torder_event_publish_order_id, torder_event_publish.event_publish_id as torder_event_publish_event_publish_id
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_order_event_publish torder_event_publish
        where torder_event_publish.id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        DELETE FROM t_order_event_publish
        WHERE id = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insert" parameterType="com.github.prontera.domain.OrderEventPublish" useGeneratedKeys="true"
            keyProperty="id">
        INSERT INTO t_order_event_publish (id, create_time, update_time,
                                           delete_time, publish_event_status,
                                           order_id, event_publish_id)
        VALUES (#{id,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP},
                #{deleteTime,jdbcType=TIMESTAMP},
                #{publishEventStatus,jdbcType=TINYINT,typeHandler=com.github.prontera.model.type.handler.EventPublishStatusHandler},
                #{orderId,jdbcType=BIGINT}, #{eventPublishId,jdbcType=BIGINT})
    </insert>
    <insert id="insertSelective" parameterType="com.github.prontera.domain.OrderEventPublish" useGeneratedKeys="true"
            keyProperty="id">
        insert into t_order_event_publish
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="deleteTime != null">
                delete_time,
            </if>
            <if test="publishEventStatus != null">
                publish_event_status,
            </if>
            <if test="orderId != null">
                order_id,
            </if>
            <if test="eventPublishId != null">
                event_publish_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="deleteTime != null">
                #{deleteTime,jdbcType=TIMESTAMP},
            </if>
            <if test="publishEventStatus != null">
                #{publishEventStatus,jdbcType=TINYINT,typeHandler=com.github.prontera.model.type.handler.EventPublishStatusHandler},
            </if>
            <if test="orderId != null">
                #{orderId,jdbcType=BIGINT},
            </if>
            <if test="eventPublishId != null">
                #{eventPublishId,jdbcType=BIGINT},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.github.prontera.domain.OrderEventPublish">
        update t_order_event_publish
        <set>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="deleteTime != null">
                delete_time = #{deleteTime,jdbcType=TIMESTAMP},
            </if>
            <if test="publishEventStatus != null">
                publish_event_status =
                #{publishEventStatus,jdbcType=TINYINT,typeHandler=com.github.prontera.model.type.handler.EventPublishStatusHandler},
            </if>
            <if test="orderId != null">
                order_id = #{orderId,jdbcType=BIGINT},
            </if>
            <if test="eventPublishId != null">
                event_publish_id = #{eventPublishId,jdbcType=BIGINT},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.github.prontera.domain.OrderEventPublish">
        UPDATE t_order_event_publish
        SET create_time          = #{createTime,jdbcType=TIMESTAMP},
            update_time          = #{updateTime,jdbcType=TIMESTAMP},
            delete_time          = #{deleteTime,jdbcType=TIMESTAMP},
            publish_event_status = #{publishEventStatus,jdbcType=TINYINT,typeHandler=com.github.prontera.model.type.handler.EventPublishStatusHandler},
            order_id             = #{orderId,jdbcType=BIGINT},
            event_publish_id     = #{eventPublishId,jdbcType=BIGINT}
        WHERE id = #{id,jdbcType=BIGINT}
    </update>
</mapper>